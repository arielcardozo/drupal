 <?php
// $Id$
/**
* @file
* First menu module file
* Learning Menu
*/
/**
* Implement hook_help().
*/
function offers_instruments_help($path, $arg) {
  if ($path == 'admin/help#proto') {
    return t('proto menu.');
  }
}
/**
* Implements hook_menu().
*/
function offers_instruments_menu() {
 

  $items['admin/config/development/instruments'] = array(
      'page callback' => 'drupal_get_form',
      'page arguments' => array('instruments_form'),
      'access arguments' => array('access content'),
      'title' => 'Instruments Management',
      'description' => 'Multi Step Form Example',
      'type' => MENU_CALLBACK | MENU_NORMAL_ITEM,
  );
  
 
  return $items;
}
/**
* Implements hook_form().
*/
function instruments_form($form, &$form_state, $operation = 'add', $instrument_id = NULL) {
 
  $form['record_operation'] = array(
      '#type' => 'hidden',
      '#value' => $operation,
  );
 
  $form['report'] = array(
      '#type' => 'markup',
      '#markup' => drupal_render(instruments_db_report()),
      '#weight' => 10,
  );
 
  if ($operation == 'modify' || $operation == 'delete') {
 
    if (!isset($form_state['input']['op'])) {
      $db = new DbInstrument();
      $instrument = $db->get($instrument_id);
      $form_state['storage']['name_instrument'] = $instrument->getName_instrument();
      $form_state['storage']['description_instrument'] = $instrument->getDescription_instrument();
      $form_state['storage']['general_list'] = $instrument->getGeneral_list();
     
    }
    $form['id'] = array(
        '#type' => 'hidden',
        '#value' => $instrument_id,
    );
  }
 
  switch ($operation) {
    case 'add' :
      $form['record_fieldset'] = array(
          '#type' => 'fieldset',
          '#weight' => 0,
          '#title' => t('Add New Instrument'),
          '#description' => t('Add an instrument by
          performing 2 steps. 1) Add the name and description. 2) Confirm your election.'),
      );
      $submit_value = 'Submit - Complete Form';
      $form = _populateInstruments_form_steps($form, $form_state, $submit_value);
      break;
    case 'modify' :
      $form['record_fieldset'] = array(
          '#type' => 'fieldset',
          '#weight' => 0,
          '#title' => t('Edit Record'),
      );
 
      $submit_value = t('Submit Change');
      $form = _populateInstruments_form_steps($form, $form_state, $submit_value);
      break;
 
    case 'delete' :
      $form['record_fieldset'] = array(
          '#type' => 'fieldset',
          '#weight' => 0,
          '#title' => t('Delete Record'),
      );
      $submit_value = t('Confirm Delete');
      $additonal_elements = _add_delete_operation_elements($form_state, $operation, $instrument_id, $submit_value);
      $form = array_merge_recursive($additonal_elements, $form);
      break;
  }
 
  return $form;
}
 
//Establece los pasos
function _populateInstruments_form_steps($form, &$form_state, $submit_value = NULL) {
 
  if (empty($form_state['storage']['step'])) {
    $form_state['storage']['step'] = 0;
  }
 
  switch ($form_state['storage']['step']) {
    case 0:
      $form = _handler_step_00($form, $form_state, $submit_value);
      break;
    case 1:
      $form = _handler_step_01($form, $form_state, $submit_value);
      break;
  }
  return $form;
}
 
function _add_delete_operation_elements(&$form_state, $operation, $folk_id, $submit_value) {
 
  $name_instrument = '';
  $description_instrument = '';
  if (!isset($form_state['input']['op'])) {
    // stored during form request
    $name_instrument = $form_state['storage']['name_instrument'];
    $description_instrument = $form_state['storage']['description_instrument'];
  }
  else {
    // get values from users submit
    $name_instrument = $form_state['storage']['name_instrument'];
    $description_instrument = $form_state['storage']['description_instrument'];
  }
 
  $weight = 0;
 
  $form['record_fieldset']['name_instrument'] = array(
      '#type' => 'textfield',
      '#size' => 50,
      '#default_value' => $name_instrument,
      '#prefix' => '<table><tr><td>',
      '#suffix' => '</td>',
      '#weight' => $weight++,
  );
 
  $form['record_fieldset']['description_instrument'] = array(
      '#type' => 'textfield',
      '#size' => 30,
      '#default_value' => $description_instrument,
      '#prefix' => '<td>',
      '#suffix' => '</td>',
      '#weight' => $weight++,
  );
 
  $form['record_fieldset']['submit'] = array(
      '#type' => 'submit',
      '#value' => $submit_value,
      '#prefix' => '<td>',
      '#suffix' => '</td>',
      '#weight' => $weight++,
  );
 
  $form['record_fieldset']['cancel'] = array(
      '#type' => 'submit',
      '#value' => 'Cancel',
      '#prefix' => '<td>',
      '#suffix' => '</td></tr></table>',
      '#weight' => $weight++,
  );
  return $form;
}


//Paso 0 del manejo del formulario
function _handler_step_00($form, &$form_state, $submit_value) {
 
  $weight = 0;
 
  switch ($submit_value) {
    case 'Submit - Complete Form' :
      $reset_cancel = 'Reset';
      break;
 
    case 'Submit Change':
      $reset_cancel = 'Cancel';
      break;
  }
 
 /*if(isset($form_state['input']['color'])){
     $form['color'] = array(
          '#type' => 'hidden',
          '#value' => isset($form_state['storage']['color'])? $form_state['storage']['color'] : $form_state['input']['color'],
      );
 }
 else{
  $form['color'] = array(
          '#type' => 'hidden',
          '#value' => isset($form_state['storage']['color'])? $form_state['storage']['color'] : $form_state['input']['color'],
      );
 }*/
 
 
  $form['record_fieldset']['name_instrument'] = array(
      '#type' => 'textfield',
      '#size' => 50,
      '#maxlength' => 255,
      '#title' => t('Instrument\' Name'),
      '#weight' => $weight++,
      '#prefix' => '<table border=0 cellspacing=3 celladding=3><tr><td>',
      '#suffix' => '</td>',
      '#default_value' => isset($form_state['storage']['name_instrument']) 
                                          ? $form_state['storage']['name_instrument'] : '',
  );
 
  $form['record_fieldset']['description_instrument'] = array(
      '#type' => 'textfield',
      '#size' => 50,
      '#maxlength' => 255,
      '#title' => t('Insturment\' Description'),
      '#weight' => $weight++,
      '#prefix' => '<td>',
      '#suffix' => '</td>',
      '#default_value' => isset($form_state['storage']['description_instrument']) 
                                          ? $form_state['storage']['description_instrument'] : '',
  );
   $form['record_fieldset']['general_list'] = array(
      '#type' => 'textfield',
      '#size' => 2,
      '#maxlength' => 2,
      '#title' => t('General List'),
      '#weight' => $weight++,
      '#prefix' => '<td>',
      '#suffix' => '</td>',
      '#default_value' => isset($form_state['storage']['general_list']) 
                                          ? $form_state['storage']['general_list'] : '',
  );
 
  $form['record_fieldset']['reset'] = array(
      '#type' => 'submit',
      '#value' => $reset_cancel,
      '#weight' => $weight++,
      '#prefix' => '<td>',
      '#suffix' => '</td>',
  );
 
  $form['record_fieldset']['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Next Step',
      '#weight' => $weight++,
      '#prefix' => '<td>',
      '#suffix' => '</td></tr></table>',
  );
 
  return $form;
}
 
//Manejo del paso 1 del formulario
function _handler_step_01($form, &$form_state, $submit_value) {
 
  $weight = 0;
 
  /*$form['record_fieldset']['color'] = array(
      '#type' => 'select',
      '#options' => array('red' => 'red', 'white' => 'white', 'blue' => 'blue'),
      '#default_value' => isset($form_state['values']['color']) 
                                          ? $form_state['values']['color'] : 'red',
      '#title' => t('Favorite Color'),
      '#weight' => $weight++,
      '#prefix' => '<table border=0 cellspacing=2 celladding=2><tr><td>',
      '#suffix' => '</td>',
  );*/
 
  $form['record_fieldset']['submit'] = array(
      '#type' => 'submit',
      '#value' => $submit_value,
      '#weight' => $weight++,
      '#prefix' => '<td>',
      '#suffix' => '</td>',
      '#title' => t('Click this button to complete the form and submit your entries.'),
  );
 
  $form['record_fieldset']['cancel'] = array(
      '#type' => 'submit', '#weight' => $weight++,
      '#value' => 'Previous Step',
      '#prefix' => '<td>',
      '#suffix' => '</td></tr></table>',
  );
 
  return $form;
}


//Envío del formulario
function instruments_form_submit($form, &$form_state) {
 
  if (isset($form_state['storage']['step'])) {
    $form_state = _process_instruments_submit($form, $form_state);
  }
  else {
    _process_delete_instrument_operation_submit($form, $form_state);
  }
}


//Eliminación de instrumento 
function _process_delete_instrument_operation_submit($form, $form_state) {
 
  if ($form_state['values']['op'] == 'Confirm Delete') {
    $db = new DbInstrument();
    $db->delete($form_state['values']['id']);
  }
  drupal_goto('admin/config/development/instruments');
}


//Manejo de los pasos 
function _process_instruments_submit($form, $form_state) {
 
  switch ($form_state['storage']['step']) {
 
    case 0:
      switch ($form_state['values']['op']) {
        case 'Next Step' :
          if ($form_state['values']['record_operation'] == 'add') {
            $form_state['rebuild'] = TRUE;
            $form_state['storage']['name_instrument'] = $form_state['values']['name_instrument'];
            $form_state['storage']['description_instrument'] = $form_state['values']['description_instrument'];
            $form_state['storage']['general_list'] = $form_state['values']['general_list'];
            $form_state['storage']['record_operation'] = $form_state['values']['record_operation'];
          }
          if ($form_state['values']['record_operation'] == 'modify') {
            $form_state['rebuild'] = TRUE;
            $form_state['storage']['name_instrument'] = $form_state['values']['name_instrument'];
            $form_state['storage']['description_instrument'] = $form_state['values']['description_instrument'];
            $form_state['storage']['general_list'] = $form_state['values']['general_list'];
            $form_state['storage']['record_operation'] = $form_state['values']['record_operation'];
          }
          $form_state['storage']['step'] = 1;
          break;
        case 'Reset' :
        case 'Cancel' :
          unset($form_state['storage']);
          drupal_goto('admin/config/development/instruments');
          break;
      }
      break;
 
    case 1:
      switch ($form_state['values']['op']) {
        case 'Previous Step':
          $form_state['storage']['step'] = 0;
          $form_state['rebuild'] = TRUE;
          break;
        case 'Submit - Complete Form' :
          $db = new DbInstrument();
          $db->add($form_state['storage']['name_instrument'], 
                         $form_state['storage']['description_instrument'],
                         $form_state['storage']['general_list']);
          drupal_goto('admin/config/development/instruments', array(
              'query' => array('sort' => 'desc', 'order' => 'Id')));
          break;
        case 'Submit Change' :
          $db = new DbInstrument();
          $instrument = new Instrument();
          $instrument->setName_instrument($form_state['storage']['name_instrument']);
          $instrument->setDescription_instrument($form_state['storage']['description_instrument']);
          $instrument->setGeneral_list($form_state['storage']['general_list']);
          $instrument->setKey($form_state['values']['id']);
          $db->set($instrument);
          drupal_goto('admin/config/development/instruments');
          break;
      }
      break;
  }
  return $form_state;
}


 
 
//Tabla informando los registros que hay
function instruments_db_report() {
 
  $header = array(
      'id' => array('data' => t('Id'), 'field' => 'i.nid_instrument'),
      'name_instrument' => array('data' => t('Name'), 'field' => 'i.name_instrument'),
      'description_instrument' => array('data' => t('Description'), 'field' => 'i.description_instrument'),
      'general_list' => array('data' => t('Lista General'), 'field' => 'i.general_list'),
      'operations' => array('data' => t('Operations'), 'colspan' => 2),
  );
 
  $query = db_select('instruments', 'i');
 
  $count_query = clone $query;
  $count_query->addExpression('COUNT(i.nid_instrument)');
 
  $query = $query->extend('PagerDefault')->extend('TableSort');
 
  $query
          ->fields('i', array('nid_instrument', 'name_instrument', 'description_instrument','general_list'))
          ->limit(20)
          ->orderByHeader($header)
          ->setCountQuery($count_query);
 
 
  $result = $query->execute();
 
  $rows = array();
  foreach ($result as $instrument) {
 
    $rows[$instrument->nid_instrument] = array(
        'nid_instrument' => get_html('span', $instrument->nid_instrument),
        'name_instrument' => get_html('span', $instrument->name_instrument),
        'description_instrument' => get_html('span', $instrument->description_instrument),
        'general_list' => get_html('span', $instrument->general_list),
        'modify' => l(t('Modify'), 'admin/config/development/instruments/modify/' . $instrument->nid_instrument, array('html' => TRUE)),
                     
        'delete' => l(t('Delete'), 'admin/config/development/instruments/delete/' . $instrument->nid_instrument, array('html' => TRUE)),
     
    );
  }
 
  $vars['header'] = $header;
  $vars['empty'] = 'Empty List - No Entries';
  $vars['rows'] = $rows;
 
  $render_array['table'] = array(
      '#theme' => 'table',
      '#rows' => $rows,
      '#empty' => 'Empty List - No Entries',
      '#header' => $header,
  );
  $render_array['pager'] = array(
      '#theme' => 'pager',
  );
 
  return $render_array;
}

function get_html($tag = 'p', $value = NULL, $attributes = array()) {
  $vars['element'] =
    array('#tag' => $tag,
          '#attributes' => $attributes,
          '#value' => $value,
  );
  return theme('html_tag', $vars);
}